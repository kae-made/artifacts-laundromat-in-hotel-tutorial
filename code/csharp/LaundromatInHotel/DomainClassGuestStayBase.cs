// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 0.0.1
//  
//     Updates this file cause incorrect behavior 
//     and will be lost when the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Kae.StateMachine;

namespace LaundromatInHotel
{
    public partial class DomainClassGuestStayBase : DomainClassGuestStay
    {
        private static readonly string className = "GuestStay";
        public string ClassName { get { return className; } }

        InstanceRepository instanceRepository;

        public static DomainClassGuestStayBase CreateInstance(InstanceRepository instanceRepository)
        {
            var newInstance = new DomainClassGuestStayBase(instanceRepository);
            instanceRepository.Add(newInstance);

            return newInstance;
        }

        public DomainClassGuestStayBase(InstanceRepository instanceRepository)
        {
            this.instanceRepository = instanceRepository;
            attr_GuestStayID = Guid.NewGuid().ToString();
        }

        string attr_GuestStayID;
        DateTime attr_StartTime;
        DateTime attr_EndTimeOfValidity;
        string attr_RoomID;
        int attr_Charge;

        public string Attr_GuestStayID { get { return attr_GuestStayID; } set { attr_GuestStayID = value; } }
        public DateTime Attr_StartTime { get { return attr_StartTime; } set { attr_StartTime = value; } }
        public DateTime Attr_EndTimeOfValidity { get { return attr_EndTimeOfValidity; } set { attr_EndTimeOfValidity = value; } }
        public string Attr_RoomID { get { return attr_RoomID; } }
        public int Attr_Charge { get { return attr_Charge; } set { attr_Charge = value; } }

        private DomainClassGuestRoom relR4GuestRoomIsAssignedFor;

        public DomainClassGuestRoom LinkedR4IsAssignedFor()
        {
            if (relR4GuestRoomIsAssignedFor == null)
            {
                var candidates = instanceRepository.GetDomainInstances("GuestRoom").Where(inst=>(this.Attr_RoomID==((DomainClassGuestRoom)inst).Attr_RoomID));
                relR4GuestRoomIsAssignedFor = (DomainClassGuestRoom)candidates.First();
            }
            return relR4GuestRoomIsAssignedFor;
        }

        public bool LinkR4IsAssignedFor(DomainClassGuestRoom instance)
        {
            bool result = false;
            if (relR4GuestRoomIsAssignedFor == null)
            {
                this.attr_RoomID = instance.Attr_RoomID;
                result = true;
            }
            return result;
        }
        public bool UnlinkR4IsAssignedFor(DomainClassGuestRoom instance)
        {
            bool result = false;
            if (relR4GuestRoomIsAssignedFor != null && ( this.Attr_RoomID==instance.Attr_RoomID ))
            {
                this.attr_RoomID = null;
                relR4GuestRoomIsAssignedFor = null;
                result = true;
            }
            return result;
        }

        public IEnumerable<DomainClassGuest> LinkedR5()
        {
            var result = new List<DomainClassGuest>();
            var candidates = instanceRepository.GetDomainInstances("Guest").Where(inst=>(this.Attr_GuestStayID==((DomainClassGuest)inst).Attr_GuestStayId));
            foreach (var c in candidates)
            {
                result.Add((DomainClassGuest)c);
            }
            return result;
        }
        public DomainClassCardKey LinkedR6()
        {
            var candidates = instanceRepository.GetDomainInstances("CardKey").Where(inst=>(this.Attr_GuestStayID==((DomainClassCardKey)inst).Attr_GuestStayID));
            return (DomainClassCardKey)candidates.First();
        }
        public DomainClassWashingMachineReservation LinkedR12RequestOfReservation()
        {
            var candidates = instanceRepository.GetDomainInstances("WashingMachineReservation").Where(inst=>(this.Attr_GuestStayID==((DomainClassWashingMachineReservation)inst).Attr_GuestStayID));
            return (DomainClassWashingMachineReservation)candidates.First();
        }
        public IEnumerable<DomainClassWashingMachineinUse> LinkedR18OneIsUsing()
        {
            var result = new List<DomainClassWashingMachineinUse>();
            var candidates = instanceRepository.GetDomainInstances("WashingMachineinUse").Where(inst=>(this.Attr_GuestStayID==((DomainClassWashingMachineinUse)inst).Attr_GuestStayID));
            foreach (var c in candidates)
            {
                result.Add((DomainClassWashingMachineinUse)c);
            }
            return result;
        }
        
        public bool Validate()
        {
            bool isValid = true;
            if (relR4GuestRoomIsAssignedFor == null)
            {
                isValid = false;
            }
            if (this.LinkedR5().Count() == 0)
            {
                isValid = false;
            }

            return isValid;
        }

        public void Dispose()
        {
            instanceRepository.Delete(this);
        }
    }
}
