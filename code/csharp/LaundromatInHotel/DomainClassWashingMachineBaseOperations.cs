// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 0.1.0
//  
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Kae.StateMachine;
using Kae.DomainModel.Csharp.Framework;

namespace LaundromatInHotel
{
    partial class DomainClassWashingMachineBase
    {
        public bool IsAvailable()
        {
            // TODO : Let's write code!
            // Action Description on Model as a reference
            //  1 : isAvailable = true;
            //  2 : SELECT ONE isUsing RELATED BY SELF->WashingMachineinUse[R18];
            //  3 : IF NOT_EMPTY isUsing
            //  4 : 	isAvailable = false;
            //  5 : END IF;
            //  6 : RETURN isAvailable;

            var changedStates = new List<ChangedState>();
           // Generated from action description
            // Line : 1
            var isAvailable = true;
            // Line : 2
            var isUsing = this.LinkedR18OneIsUsedBy();

            // Line : 3
            if (isUsing != null)
            {
                // Line : 4
                isAvailable = false;
            }

            // Line : 6
            instanceRepository.SyncChangedStates(changedStates);
            return isAvailable;


        }

        public void StopExecution()
        {
            // TODO : Let's write code!
            // Action Description on Model as a reference

            var changedStates = new List<ChangedState>();
           // Generated from action description

        
            instanceRepository.SyncChangedStates(changedStates);
        }

        public void StartWashing(int timeInMinutes)
        {
            // TODO : Let's write code!
            // Action Description on Model as a reference

            var changedStates = new List<ChangedState>();
           // Generated from action description

        
            instanceRepository.SyncChangedStates(changedStates);
        }

        public void StartDrying(int timeInMinutes)
        {
            // TODO : Let's write code!
            // Action Description on Model as a reference

            var changedStates = new List<ChangedState>();
           // Generated from action description

        
            instanceRepository.SyncChangedStates(changedStates);
        }


    }
}
