// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 0.0.1
//  
//     Updates this file cause incorrect behavior 
//     and will be lost when the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Kae.StateMachine;

namespace LaundromatInHotel
{
    public partial class DomainClassReservableWashingMachineBase : DomainClassReservableWashingMachine
    {
        private static readonly string className = "ReservableWashingMachine";
        public string ClassName { get { return className; } }

        InstanceRepository instanceRepository;

        public static DomainClassReservableWashingMachineBase CreateInstance(InstanceRepository instanceRepository)
        {
            var newInstance = new DomainClassReservableWashingMachineBase(instanceRepository);
            instanceRepository.Add(newInstance);

            return newInstance;
        }

        public DomainClassReservableWashingMachineBase(InstanceRepository instanceRepository)
        {
            this.instanceRepository = instanceRepository;
            stateMachine = new DomainClassReservableWashingMachineStateMachine(this);
        }

        string attr_MachineID;
        DomainClassReservableWashingMachineStateMachine stateMachine;
        string attr_Next_ReservationID;

        public string Attr_MachineID { get { return attr_MachineID; } }
        public int Attr_current_state { get { return stateMachine.CurrentState; } }
        public string Attr_Next_ReservationID { get { return attr_Next_ReservationID; } }

        private DomainClassWashingMachine relR15WashingMachine;
        private DomainClassWashingMachineReservation relR19WashingMachineReservationNextReservation;

        public DomainClassWashingMachine GetSuperClassR15()
        {
            if (relR15WashingMachine == null)
            {
                var candidates = instanceRepository.GetDomainInstances("WashingMachine").Where(inst => (this.Attr_MachineID==((DomainClassWashingMachine)inst).Attr_MachineID));
                relR15WashingMachine = (DomainClassWashingMachine)candidates.First();
            }
            return relR15WashingMachine;
        }
        public bool LinkR15(DomainClassWashingMachine instance)
        {
            bool result = false;
            if (relR15WashingMachine == null)
            {
                this.attr_MachineID = instance.Attr_MachineID;
                result = true;
            }
            return result;
        }
        public bool UnlinkR15(DomainClassWashingMachine instance)
        {
            bool result = false;
            if (relR15WashingMachine != null && ( this.Attr_MachineID==instance.Attr_MachineID ))
            {
                this.attr_MachineID = null;
                relR15WashingMachine = null;
                result = true;
            }
            return result;
        }

        public DomainClassWashingMachineReservation LinkedR19NextReservation()
        {
            if (relR19WashingMachineReservationNextReservation == null)
            {
                var candidates = instanceRepository.GetDomainInstances("WashingMachineReservation").Where(inst=>(this.Attr_Next_ReservationID==((DomainClassWashingMachineReservation)inst).Attr_ReservationID));
                relR19WashingMachineReservationNextReservation = (DomainClassWashingMachineReservation)candidates.First();
            }
            return relR19WashingMachineReservationNextReservation;
        }

        public bool LinkR19NextReservation(DomainClassWashingMachineReservation instance)
        {
            bool result = false;
            if (relR19WashingMachineReservationNextReservation == null)
            {
                this.attr_Next_ReservationID = instance.Attr_ReservationID;
                result = true;
            }
            return result;
        }
        public bool UnlinkR19NextReservation(DomainClassWashingMachineReservation instance)
        {
            bool result = false;
            if (relR19WashingMachineReservationNextReservation != null && ( this.Attr_Next_ReservationID==instance.Attr_ReservationID ))
            {
                this.attr_Next_ReservationID = null;
                relR19WashingMachineReservationNextReservation = null;
                result = true;
            }
            return result;
        }
        public void TakeEvent(EventData domainEvent)
        {
            stateMachine.ReceivedEvent(domainEvent).Wait();
        }

        
        public bool Validate()
        {
            bool isValid = true;
            if (relR15WashingMachine == null)
            {
                isValid = false;
            }
            return isValid;
        }

        public void Dispose()
        {
            instanceRepository.Delete(this);
        }
    }
}
