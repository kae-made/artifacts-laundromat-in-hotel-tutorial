// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 0.0.1
//  
//     Updates this file cause incorrect behavior 
//     and will be lost when the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Kae.StateMachine;

namespace LaundromatInHotel
{
    public partial class DomainClassNonReservationWashingMachineBase : DomainClassNonReservationWashingMachine
    {
        private static readonly string className = "NonReservationWashingMachine";
        public string ClassName { get { return className; } }

        InstanceRepository instanceRepository;

        public static DomainClassNonReservationWashingMachineBase CreateInstance(InstanceRepository instanceRepository)
        {
            var newInstance = new DomainClassNonReservationWashingMachineBase(instanceRepository);
            instanceRepository.Add(newInstance);

            return newInstance;
        }

        public DomainClassNonReservationWashingMachineBase(InstanceRepository instanceRepository)
        {
            this.instanceRepository = instanceRepository;
        }

        string attr_MachineID;

        public string Attr_MachineID { get { return attr_MachineID; } }

        private DomainClassWashingMachine relR15WashingMachine;

        public DomainClassWashingMachine GetSuperClassR15()
        {
            if (relR15WashingMachine == null)
            {
                var candidates = instanceRepository.GetDomainInstances("WashingMachine").Where(inst => (this.Attr_MachineID==((DomainClassWashingMachine)inst).Attr_MachineID));
                relR15WashingMachine = (DomainClassWashingMachine)candidates.First();
            }
            return relR15WashingMachine;
        }
        public bool LinkR15(DomainClassWashingMachine instance)
        {
            bool result = false;
            if (relR15WashingMachine == null)
            {
                this.attr_MachineID = instance.Attr_MachineID;
                result = true;
            }
            return result;
        }
        public bool UnlinkR15(DomainClassWashingMachine instance)
        {
            bool result = false;
            if (relR15WashingMachine != null && ( this.Attr_MachineID==instance.Attr_MachineID ))
            {
                this.attr_MachineID = null;
                relR15WashingMachine = null;
                result = true;
            }
            return result;
        }

        
        public bool Validate()
        {
            bool isValid = true;
            if (relR15WashingMachine == null)
            {
                isValid = false;
            }
            return isValid;
        }

        public void Dispose()
        {
            instanceRepository.Delete(this);
        }
    }
}
